<snippet>
  <content><![CDATA[
//-----------------------------
const int MAXN = 1e6 + 5;
vector<int> primes;
bool is_prime[MAXN];

void sieve_of_eratosthenes() {
    memset(is_prime, true, sizeof is_prime);
    for (int p = 2; p * p <= MAXN; p++) {
        if (is_prime[p] == true) {
            for (int i = p * p; i <= MAXN; i += p)
                is_prime[i] = false;
        }
    }
    for (int p = 2; p <= MAXN; p++)
        if (is_prime[p])
            primes.push_back(p);
}
//--------------------------------
//prime_factorization----------------------------------------------------------
vector<int> prime_factorization(int n)
{
    vector<int> factors;
    for (int i = 0; primes[i] <= n / primes[i] ; i++) {
        while (n % primes[i] == 0) {
            factors.push_back(primes[i]);
            n /= primes[i];
        }
    }
    if (n > 1) {
        factors.push_back(n);
    }
    return factors;
} 
//------------------------------------------------------------------------
]]></content>
  <tabTrigger>Prime_Factorization</tabTrigger>
  <description></description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>